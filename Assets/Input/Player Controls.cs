//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/Player Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player Controls"",
    ""maps"": [
        {
            ""name"": ""Common action map"",
            ""id"": ""ca2282cc-9133-4ef1-a825-0221a07512e5"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""b28f067d-fa81-410a-9d5e-bf2632998b7f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""faf56d43-8654-4d52-af07-b639b63f8ecd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Light"",
                    ""type"": ""Button"",
                    ""id"": ""4e741ecf-f0c6-4ff9-b3b6-d1f20479013e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""831959aa-0aa8-420c-abc6-15e1f605730b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnVision"",
                    ""type"": ""Value"",
                    ""id"": ""5766d5e8-9d3f-4144-b17d-91f865a9d9c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""479d89e2-37b8-4c94-b9a9-e13f5b089809"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""edbc9e05-b3e5-47c6-bd50-b6d2114a0f33"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchItem"",
                    ""type"": ""Value"",
                    ""id"": ""2003d0dc-17ac-4f63-a2bd-343c9faf1a8b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7b2a39ce-d460-4e11-9e1b-ede3cac75886"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7717fb76-5483-454c-ac62-20b83002c747"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""00810ee0-bc14-4593-88e3-32bc61538add"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9d2b9ba6-3643-4ccd-864f-36bc6e09496e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4d2b9265-f647-4e42-b031-c64182464835"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LR"",
                    ""id"": ""05bbc2db-fa37-4140-b452-a993efc10ea8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""facbcf00-5a3f-40ff-a5af-bc4bc12ca661"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""aa0c3ca1-0eb9-4292-bb4d-9f36cebfa998"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""22aebb41-dfff-42f9-9d4b-e7ef674df609"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Light"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c127fe9a-00a3-4711-8a49-2f36e538aef4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""231e7f69-7ca0-49ae-ab16-b972f2ebe75a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""QE"",
                    ""id"": ""facaac64-2ad1-4f75-bac8-e29aa7c23f7b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnVision"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6cc4d373-50f2-43aa-947a-86b6566d5243"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnVision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""293d6dc6-ccde-4a7e-bbe5-417441233455"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnVision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6241274b-22a9-457c-aa1a-8b99233dc3fc"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8254ee72-15da-4515-8944-b6993ca16f0d"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Common action map
        m_Commonactionmap = asset.FindActionMap("Common action map", throwIfNotFound: true);
        m_Commonactionmap_Movement = m_Commonactionmap.FindAction("Movement", throwIfNotFound: true);
        m_Commonactionmap_Mouse = m_Commonactionmap.FindAction("Mouse", throwIfNotFound: true);
        m_Commonactionmap_Light = m_Commonactionmap.FindAction("Light", throwIfNotFound: true);
        m_Commonactionmap_Interaction = m_Commonactionmap.FindAction("Interaction", throwIfNotFound: true);
        m_Commonactionmap_TurnVision = m_Commonactionmap.FindAction("TurnVision", throwIfNotFound: true);
        m_Commonactionmap_Menu = m_Commonactionmap.FindAction("Menu", throwIfNotFound: true);
        m_Commonactionmap_Aim = m_Commonactionmap.FindAction("Aim", throwIfNotFound: true);
        m_Commonactionmap_SwitchItem = m_Commonactionmap.FindAction("SwitchItem", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Common action map
    private readonly InputActionMap m_Commonactionmap;
    private List<ICommonactionmapActions> m_CommonactionmapActionsCallbackInterfaces = new List<ICommonactionmapActions>();
    private readonly InputAction m_Commonactionmap_Movement;
    private readonly InputAction m_Commonactionmap_Mouse;
    private readonly InputAction m_Commonactionmap_Light;
    private readonly InputAction m_Commonactionmap_Interaction;
    private readonly InputAction m_Commonactionmap_TurnVision;
    private readonly InputAction m_Commonactionmap_Menu;
    private readonly InputAction m_Commonactionmap_Aim;
    private readonly InputAction m_Commonactionmap_SwitchItem;
    public struct CommonactionmapActions
    {
        private @PlayerControls m_Wrapper;
        public CommonactionmapActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Commonactionmap_Movement;
        public InputAction @Mouse => m_Wrapper.m_Commonactionmap_Mouse;
        public InputAction @Light => m_Wrapper.m_Commonactionmap_Light;
        public InputAction @Interaction => m_Wrapper.m_Commonactionmap_Interaction;
        public InputAction @TurnVision => m_Wrapper.m_Commonactionmap_TurnVision;
        public InputAction @Menu => m_Wrapper.m_Commonactionmap_Menu;
        public InputAction @Aim => m_Wrapper.m_Commonactionmap_Aim;
        public InputAction @SwitchItem => m_Wrapper.m_Commonactionmap_SwitchItem;
        public InputActionMap Get() { return m_Wrapper.m_Commonactionmap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CommonactionmapActions set) { return set.Get(); }
        public void AddCallbacks(ICommonactionmapActions instance)
        {
            if (instance == null || m_Wrapper.m_CommonactionmapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CommonactionmapActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Mouse.started += instance.OnMouse;
            @Mouse.performed += instance.OnMouse;
            @Mouse.canceled += instance.OnMouse;
            @Light.started += instance.OnLight;
            @Light.performed += instance.OnLight;
            @Light.canceled += instance.OnLight;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @TurnVision.started += instance.OnTurnVision;
            @TurnVision.performed += instance.OnTurnVision;
            @TurnVision.canceled += instance.OnTurnVision;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @SwitchItem.started += instance.OnSwitchItem;
            @SwitchItem.performed += instance.OnSwitchItem;
            @SwitchItem.canceled += instance.OnSwitchItem;
        }

        private void UnregisterCallbacks(ICommonactionmapActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Mouse.started -= instance.OnMouse;
            @Mouse.performed -= instance.OnMouse;
            @Mouse.canceled -= instance.OnMouse;
            @Light.started -= instance.OnLight;
            @Light.performed -= instance.OnLight;
            @Light.canceled -= instance.OnLight;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @TurnVision.started -= instance.OnTurnVision;
            @TurnVision.performed -= instance.OnTurnVision;
            @TurnVision.canceled -= instance.OnTurnVision;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @SwitchItem.started -= instance.OnSwitchItem;
            @SwitchItem.performed -= instance.OnSwitchItem;
            @SwitchItem.canceled -= instance.OnSwitchItem;
        }

        public void RemoveCallbacks(ICommonactionmapActions instance)
        {
            if (m_Wrapper.m_CommonactionmapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICommonactionmapActions instance)
        {
            foreach (var item in m_Wrapper.m_CommonactionmapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CommonactionmapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CommonactionmapActions @Commonactionmap => new CommonactionmapActions(this);
    public interface ICommonactionmapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnLight(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnTurnVision(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnSwitchItem(InputAction.CallbackContext context);
    }
}
